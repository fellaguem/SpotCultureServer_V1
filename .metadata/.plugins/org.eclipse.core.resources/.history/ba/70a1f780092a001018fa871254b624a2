package com.spotculture.servlets;

import com.spotculture.utils.DBConnection;
import com.spotculture.utils.PasswordUtil;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.*;

import java.io.*;
import java.sql.*;

@WebServlet("/users")
public class UserServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;

    // POST : Ajouter un utilisateur
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
    	System.err.println("aaaa");

    	String name = request.getParameter("name");
    	String firstname = request.getParameter("firstname");
    	String email = request.getParameter("email");
    	String password = request.getParameter("password_hash");
    	

    	if (name == null || firstname == null || email == null || passwordHash == null) {
    	    response.setStatus(400);
    	    response.getWriter().println("{\"error\": \"Paramètres requis : name, firstname, email, password_hash\"}");
    	    return;
    	}
    	
    	String passwordHash = PasswordUtil.hashPassword(password);

    	try (Connection conn = DBConnection.getConnection();
    		     PreparedStatement stmt = conn.prepareStatement(
    		         "INSERT INTO users (name, firstname, email, password_hash, created_at) VALUES (?, ?, ?, ?, NOW())")) {

    		    stmt.setString(1, name);
    		    stmt.setString(2, firstname);
    		    stmt.setString(3, email);
    		    stmt.setString(4, passwordHash);

    		    int rows = stmt.executeUpdate();
    		    response.getWriter().println("{\"status\": \"Utilisateur ajouté (" + rows + " ligne(s))\"}");

    		} catch (SQLException e) {
    		    response.setStatus(500);
    		    response.getWriter().println("{\"error\": \"" + e.getMessage() + "\"}");
    		}

    }

    // PUT : Modifier l’email ou le mot de passe
    @Override
    protected void doPut(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        BufferedReader reader = request.getReader();
        StringBuilder sb = new StringBuilder();
        String line;

        while ((line = reader.readLine()) != null)
            sb.append(line);

        String[] params = sb.toString().split("&");
        int id = 0;
        String email = null, passwordHash = null;

        for (String param : params) {
            String[] pair = param.split("=");
            String key = pair[0];
            String value = pair.length > 1 ? pair[1].replace("+", " ") : "";

            switch (key) {
                case "id": id = Integer.parseInt(value); break;
                case "email": email = value; break;
                case "password_hash": passwordHash = value; break;
            }
        }

        if (id == 0 || (email == null && passwordHash == null)) {
            response.setStatus(400);
            response.getWriter().println("{\"error\": \"Paramètres requis : id, et (email ou password_hash)\"}");
            return;
        }

        String sql = "UPDATE users SET ";
        boolean setEmail = email != null;
        boolean setPassword = passwordHash != null;

        if (setEmail) sql += "email = ?";
        if (setEmail && setPassword) sql += ", ";
        if (setPassword) sql += "password_hash = ?";
        sql += " WHERE id = ?";

        try (Connection conn = DBConnection.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {

            int i = 1;
            if (setEmail) stmt.setString(i++, email);
            if (setPassword) stmt.setString(i++, passwordHash);
            stmt.setInt(i, id);

            int rows = stmt.executeUpdate();
            response.getWriter().println("{\"status\": \"Utilisateur mis à jour (" + rows + " ligne(s))\"}");

        } catch (SQLException e) {
            response.setStatus(500);
            response.getWriter().println("{\"error\": \"" + e.getMessage() + "\"}");
        }
    }
}
